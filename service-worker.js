"use strict";var precacheConfig=[["/index.html","5cf09f9607e470c11b14fde2f1517df1"],["/static/css/main.7e756c86.css","f39c6a16fd11c5e4951ed14c6ea3f18f"],["/static/js/main.9555d011.js","43154b769709a2adb28c63540f21b636"],["/static/media/CaptainChef.e187a76c.jpeg","e187a76c41feacc1e0b000766a1ccbdf"],["/static/media/Pantheon.6109f948.jpg","6109f94872ce78d69cc5ab31e6c42f94"],["/static/media/SilverScreener.0f4e2b2d.jpeg","0f4e2b2df1128454784f74156f2f1cf5"],["/static/media/androidappbundle.28341ab7.png","28341ab7e87b427a690308a84d491c72"],["/static/media/animus.bf79265e.jpg","bf79265e44f8d87871435f44bc65f958"],["/static/media/anko.e655ac41.jpg","e655ac412b13bbbeffebcbd2daee4b6e"],["/static/media/bapspatil.6160837c.png","6160837c288a718d716debe4110323a7"],["/static/media/careeradvice.483581ad.jpg","483581ad2a2dd4806f07884918bec8ed"],["/static/media/eclectic.e4c95343.jpg","e4c953439e811a98a65ef95c3b6748d2"],["/static/media/flickOff.f02bca23.jpeg","f02bca23241f5be0b4c5e8a2f7bb9deb"],["/static/media/hindsight.ca8511e2.jpg","ca8511e229852a87f2331d127bcbfbdb"],["/static/media/kotlinjava.791c5cbc.png","791c5cbc1883d2576a3f8cffbdace478"],["/static/media/lineuptechjob.d9c00554.png","d9c00554e7ffba60453f37eb7316be05"],["/static/media/mockingbirdmedia.26de0976.png","26de09768c07af03c805330e8a213382"],["/static/media/realmapksize.e577b180.png","e577b1801baf5dbbef872e9ce79198f4"],["/static/media/resume.fae7740b.pdf","fae7740b404d57d822b14d259763c838"],["/static/media/xoxo.9e6c66ea.jpg","9e6c66eab1bd1b40f4527be640c91430"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});